[gcode_macro _START_PRINT]
description:
  EXTRUDER_TEMP - температура экструдера
  BED_TEMP - температура стола
  CHAMBER_TEMP - температура термокамеры

  Пример использования:
    CURA:  _START_PRINT EXTRUDER_TEMP= BED_TEMP= START_CHAMBER_TEMP= CHAMBER_TEMP= INITIAL_TOOL= X1=
    PRUSA: _START_PRINT EXTRUDER_TEMP={first_layer_temperature[0]},{first_layer_temperature[1]} BED_TEMP=[first_layer_bed_temperature] START_CHAMBER_TEMP=[chamber_temperature] CHAMBER_TEMP=[chamber_temperature] INITIAL_TOOL={initial_tool} X1={first_layer_print_max[0]} 
    ORCA:  _START_PRINT EXTRUDER_TEMP= BED_TEMP= START_CHAMBER_TEMP= CHAMBER_TEMP= INITIAL_TOOL= X1= 
gcode:
  CLEAR_PAUSE
  LED_STATE STATE=warning
  # --- Параметры из слайсера ---
  {% set initial_tool = params.INITIAL_TOOL|default(0)|int %}

  {% set raw_temp = params.EXTRUDER_TEMP %}
  {% if ',' in raw_temp %}
    {% set extruder_temp = raw_temp.split(',') | map('float') | list %}
  {% else %}
    {% set extruder_temp = [raw_temp | float] %}
  {% endif %}
  
  {% set bed_temp = params.BED_TEMP|float %}
  {% set chamber_temp = params.CHAMBER_TEMP|float %}
  # {% set x0 = params.X0|float %}
  # {% set y0 = params.Y0|float %}
  {% set x1 = params.X1|float %}
  # {% set y1 = params.Y1|float %}

  # --- Конфигурационные границы ---
  # {% set x_min = printer.configfile.config.stepper_x.position_min|float %}
  {% set x_max = printer.configfile.config.stepper_x.position_max|float %}
  # {% set y_min = printer.configfile.config.stepper_y.position_min|float %}
  # {% set y_max = printer.configfile.config.stepper_y.position_max|float %}
  {% set dc_max = printer.configfile.config.dual_carriage.position_max|float if printer.configfile.config.dual_carriage is defined else x_max %}

  {% set current_mode = printer["gcode_macro IDEX_MODE"].mode %}
  _IDEX_INFO
  # --- Определение текущего режима IDEX ---
  {% if current_mode == "primary" %}
    {% set x_limit = x_max %}
  {% elif current_mode == "copy" %}
    {% set x_limit = x_max / 2 %}
  {%  elif current_mode == "mirror" %}
    {% set x_limit = ( (x_max / 2) - ( (dc_max - x_max) / 2 ) ) %}
  {% else %}
    LED_STATE STATE=warning
  {% endif %}

  # --- Макрос проверки границ печати ---
  {% if x1 > x_limit %}
    RESPOND TYPE=error MSG="Неверное расположение детали({x_limit}), либо некорректный режим печати."
    LED_STATE STATE=warning
  {% else %}
    # --- Обработка по режимам ---
    {% if current_mode == "primary" %}
      _IDEX_INFO
      G28
      M191 S{chamber_temp}
      M190 S{bed_temp}
      _ACTIVATE_PRIMARY_MODE
      BED_MESH_CALIBRATE
      T{initial_tool}
      M109 S{extruder_temp[initial_tool]} T{initial_tool}

    {% elif current_mode == "copy" %}
      _IDEX_INFO
      G28
      M191 S{chamber_temp}
      M190 S{bed_temp}
      _CALIBRATE_Z_HEIGHT
      M104 S{extruder_temp[0]} T0
      M104 S{extruder_temp[1]} T1
      M109 S{extruder_temp[0]} T0
      M109 S{extruder_temp[1]} T1
      _ACTIVATE_COPY_MODE
    {% elif current_mode == "mirror" %}
      _IDEX_INFO
      G28
      M191 S{chamber_temp}
      M190 S{bed_temp}
      _CALIBRATE_Z_HEIGHT
      M104 S{extruder_temp[0]} T0
      M104 S{extruder_temp[1]} T1
      M109 S{extruder_temp[0]} T0
      M109 S{extruder_temp[1]} T1
      _ACTIVATE_MIRROR_MODE
    {% else %}
      RESPOND TYPE=error MSG="Режим IDEX не выбран или неизвестен."
      LED_STATE STATE=warning
    {% endif %}
    LED_STATE STATE=printing
  {% endif %}

[gcode_macro _END_PRINT]
gcode:
  G92 E0
  TURN_OFF_HEATERS
  G90 
  G1 Z{ printer.configfile.config.stepper_z.position_endstop|int - 3 } F{ printer.configfile.settings.printer.max_z_velocity*60}
  G28 X
  M84 ;выключить моторы
  {% if printer.configfile.config['neopixel status_bar'] is defined %}
    LED_STATE STATE=done
  {% endif %}
  RESPOND  MSG="Печать завершена!"
  SET_IDLE_TIMEOUT TIMEOUT=600

[gcode_macro POST_COOLING_CYCLE] 
description:
  Макрос цикла пост-остывания
  DPH - на сколько охлаждать за 1 час 
  STEP - шаг охлаждения 
  START - начальное значение 
  END - конечное значение 
  Пример использования: POST_COOLING_CYCLE START=180 END=50
gcode: 
  {% set DPH = params.DPH|default(60)| int %} 
  {% set STEP = params.STEP|default(-2)| int %} 
  {% set START = params.START|default(75)| int %} 
  {% set END = params.END |default(30)| int %} 
 
  _PARK_{printer.toolhead.extruder}
  {% if START < END and STEP < 0 %} 
    { action_respond_info("Невозможно использовать цикл пост-остывания, STEP( %s ) должен быть %s " % (STEP, STEP | abs))} 
  {% elif START > END and STEP > 0 %} 
    { action_respond_info("Невозможно использовать цикл пост-остывания, STEP( %s ) должен быть %s " % (STEP, -STEP))} 
  {% elif START == END %} 
    { action_respond_info("Невозможно использовать цикл пост-остывания, START( %s ) не может быть равен END(%s) %s " % (START, END))} 
  {% elif STEP == 0 or DPH <= 0 %} 
    { action_respond_info("Невозможно использовать цикл пост-остывания, STEP( %s ) или DPH( %s ) не может быть 0 " % (STEP, DPH))} 
 
  {% else %}  
    {% if "xyz" in printer.toolhead.homed_axes %} 
      G90 
      G1 Z{printer.configfile.config.stepper_z.position_endstop} 
    {% endif %}
    M104 S0 ;выключить нагреватель хотэнда
    M140 S0 ;выключить нагреватель стола
    M106 S0 ;выключить вентилятор обдува модели
    SET_HEATER_TEMPERATURE HEATER=DAS TARGET=0
    {% if START > END %} 
      {% for temp in range(START, END, STEP) %} 
        SET_HEATER_TEMPERATURE HEATER=chamber TARGET={temp} 
        TEMPERATURE_WAIT SENSOR='heater_generic chamber' MAXIMUM={temp} 
        G4 P{3600 / DPH * 1000} 
      {% endfor %} 
    {% else %} 
      {% for temp in range(START, END, STEP) %} 
        SET_HEATER_TEMPERATURE HEATER=chamber TARGET={temp} 
        TEMPERATURE_WAIT SENSOR='heater_generic chamber' MINIMUM={temp} 
        G4 P{3600 / DPH * 1000} 
      {% endfor %} 
    {% endif %}
  {% endif %}
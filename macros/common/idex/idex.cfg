# [gcode_macro _PARK_extruder]
# gcode:
#   {% if printer.configfile.config.dual_carriage is defined %}
#     {% if "x" in printer.toolhead.homed_axes %}
#       SAVE_GCODE_STATE NAME=park0
#       SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
#       G90
#       G1 X{printer.configfile.config.stepper_x.position_endstop|int} F{printer.configfile.config.stepper_x.homing_speed|int*60*2}     
#       RESTORE_GCODE_STATE NAME=park0
#     {% endif %}
#   {% endif %}
# [gcode_macro _PARK_extruder1]
# gcode:
#   {% if printer.configfile.config.dual_carriage is defined %}
#     {% if "x" in printer.toolhead.homed_axes %}
#       SAVE_GCODE_STATE NAME=park1
#       SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
#       G90
#       G1 X{printer.configfile.config.dual_carriage.position_endstop|int} F{printer.configfile.config.dual_carriage.homing_speed|int*60*2}
#       RESTORE_GCODE_STATE NAME=park1
#     {% endif %}
#   {% endif %}

[gcode_macro _PARK]
description: Паркует заданную каретку (0 или 1) по оси X
variable_carriage: 0
gcode:
  {% set carriage = params.CARRIAGE|default(0)|int %}

  {% if printer.configfile.config.dual_carriage is defined and "x" in printer.toolhead.homed_axes %}
    SAVE_GCODE_STATE NAME=park{ carriage }
    SET_DUAL_CARRIAGE CARRIAGE={ carriage } MODE=PRIMARY
    G90

    {% if carriage == 0 %}
      {% set park_pos = printer.configfile.config.stepper_x.position_endstop|int %}
      {% set speed = printer.configfile.config.stepper_x.homing_speed|int * 60 * 2 %}
    {% else %}
      {% set park_pos = printer.configfile.config.dual_carriage.position_endstop|int %}
      {% set speed = printer.configfile.config.dual_carriage.homing_speed|int * 60 * 2 %}
    {% endif %}

    G1 X{ park_pos } F{ speed }
    RESTORE_GCODE_STATE NAME=park{ carriage }
  {% else %}
    SAVE_GCODE_STATE NAME=park{ carriage }
    G90
    {% set park_pos = printer.configfile.config.stepper_x.position_endstop|int %}
    {% set speed = printer.configfile.config.stepper_x.homing_speed|int * 60 * 2 %}

    G1 X{ park_pos } F{ speed }
    RESTORE_GCODE_STATE NAME=park{ carriage }
  {% endif %}


[gcode_macro IDEX_MODE]
variable_mode_primary: True
variable_mode_copy: False
variable_mode_mirror: False
gcode:
	{% if printer.configfile.config.dual_carriage is defined %}
    {% set valid_modes = ['primary', 'copy', 'mirror'] %}
    {% set requested_mode = params.MODE|default('')|string|lower %}

    {% if requested_mode in valid_modes %}
			{% for mode in valid_modes %}
        SET_GCODE_VARIABLE MACRO=IDEX_MODE VARIABLE=mode_{mode} VALUE={ 'True' if mode == requested_mode else 'False' }
      {% endfor %}
			_IDEX_INFO
    {% else %}
			RESPOND TYPE=error MSG="Неверный режим! Доступные режимы: Основной(primary), Копирующий(mirror), Зеркальный(copy)."
    {% endif %}
      RESPOND TYPE=command MSG="action:prompt_end"
  {% else %}
      RESPOND TYPE=error MSG="IDEX режимы не доступны."
  {% endif %}

[gcode_macro _IDEX_INFO]
gcode:
  {% set modes = {
      "mode_primary": "Основной",
      "mode_copy": "Копирующий",
      "mode_mirror": "Зеркальный"
  } %}
  {% for var, name in modes.items() %}
      {% if printer["gcode_macro IDEX_MODE"][var] %}
          RESPOND MSG="Текущий режим: { name }"
      {% endif %}
  {% endfor %}

[gcode_macro _ACTIVATE_COPY_MODE]
description: Активация режима копирования
gcode:
  {% if printer.configfile.config.dual_carriage is defined %}
    T0
    _PARK CARRIAGE=0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    SAVE_GCODE_STATE NAME=park1
    G90
    G1 X{(printer.configfile.config.stepper_x.position_max|int / 2) - 100} F{printer.configfile.config.dual_carriage.homing_speed|int*60*3}
    RESTORE_GCODE_STATE NAME=park1
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    # синхронизируем вентиляторы:
    M106 S{printer["gcode_macro M106"].last_speed}
  {% endif %}
[gcode_macro _ACTIVATE_MIRROR_MODE]
description: Активация режима зеркального копирования
gcode:
  {% if printer.configfile.config.dual_carriage is defined %}
    T0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
    _PARK CARRIAGE=1
    SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
    # синхронизируем вентиляторы:
    M106 S{printer["gcode_macro M106"].last_speed}
  {% endif %}
[gcode_macro _ACTIVATE_PRIMARY_MODE]
description: Активация режима независимого управления каретками
gcode:
  {% if printer.configfile.config.dual_carriage is defined %}
    _PARK CARRIAGE=1
    SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=''
    _PARK CARRIAGE=0
    T0
  {% endif %}
[gcode_macro T0]
gcode:
  _TOOL_SWITCH TOOL=0

[gcode_macro T1]
gcode:
  _TOOL_SWITCH TOOL=1

[gcode_macro _TOOL_SWITCH]
description: Универсальный макрос переключения кареток для T0 и T1
variable_tool: 0

gcode:
  {% if printer.configfile.config.dual_carriage is defined %}
    {% set current_tool = '0' if printer.toolhead.extruder == 'extruder' else '1' %}

    {% set select_tool = params.TOOL|int %}
    {% set unselect_tool = 1 if select_tool == 0 else 0 %}
    {% set select_extruder = 'extruder' if select_tool == 0 else 'extruder1' %}
    {% set unselect_extruder = 'extruder1' if select_tool == 0 else 'extruder' %}

    {% set current_state = printer.dual_carriage["carriage_" ~ unselect_tool] %}
    {% set should_park = current_state in ["PRIMARY", "INACTIVE"] if unselect_tool == 0 else current_state == "PRIMARY" %}
    {% if should_park %}
      _PARK CARRIAGE={unselect_tool}
    {% endif %}
    SET_DUAL_CARRIAGE CARRIAGE={select_tool}
    # SET_STEPPER_ENABLE STEPPER={select_extruder} ENABLE=1
    # SET_STEPPER_ENABLE STEPPER={unselect_extruder} ENABLE=0
    ACTIVATE_EXTRUDER EXTRUDER={select_extruder}

    M106 S0
    
    _APPLY_OFFSETS
  {% endif %}

[gcode_macro _PARK]
description: Паркует заданную каретку (0 или 1) по оси X
variable_carriage: 0
variable_velocity:  200
gcode:
  {% set carriage = params.CARRIAGE|default(0)|int %}
  {% if "x" in printer.toolhead.homed_axes %}
		{% set speed = printer['gcode_macro _PARK'].velocity * 60 %}
    {% if printer.configfile.config.dual_carriage is defined  %}
      {% set mode = printer.dual_carriage.carriage_1 %}
      {% if mode == "INACTIVE" or mode == "PRIMARY" %}
        SAVE_GCODE_STATE NAME=park_{ carriage }
        SET_DUAL_CARRIAGE CARRIAGE={ carriage } MODE=PRIMARY
        G90

        {% if carriage == 0 %}
          {% set park_pos = printer.configfile.config.stepper_x.position_endstop|int %}
        {% else %}
          {% set park_pos = printer.configfile.config.dual_carriage.position_endstop|int %}
        {% endif %}

        G1 X{ park_pos } F{ speed }
        RESTORE_GCODE_STATE NAME=park_{ carriage }

      {% elif mode == "MIRROR" %}
        SAVE_GCODE_STATE NAME=park_mirror
        G90
        {% set park_pos = printer.configfile.config.stepper_x.position_endstop|int %}
        G1 X{ park_pos } F{ speed }
        RESTORE_GCODE_STATE NAME=park_mirror

      {% elif mode == "COPY" %}
        SAVE_GCODE_STATE NAME=park_copy

        SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
        G90
        {% set park_pos = printer.configfile.config.dual_carriage.position_endstop|int %}
        G1 X{ park_pos } F{ speed }

        SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
        {% set park_pos = printer.configfile.config.stepper_x.position_endstop|int %}
        G1 X{ park_pos } F{ speed }

        RESTORE_GCODE_STATE NAME=park_copy
      {% endif %}

    {% else %}
      SAVE_GCODE_STATE NAME=park{ carriage }
      G90
      {% set park_pos = printer.configfile.config.stepper_x.position_endstop|int %}
      G1 X{ park_pos } F{ speed }
      RESTORE_GCODE_STATE NAME=park{ carriage }
    {% endif %}
  {% endif %}

[gcode_macro _IDEX_MODE]
description: Выбор режима печати IDEX
variable_mode: "primary"
gcode:
	{% if printer.configfile.config.dual_carriage is defined %}
    {% set valid_modes = ['primary', 'copy', 'mirror'] %}
    {% set requested_mode = params.MODE|default('')|string|lower %}

    {% if requested_mode in valid_modes %}
        SET_GCODE_VARIABLE MACRO='_IDEX_MODE' VARIABLE=mode VALUE='"{requested_mode}"'
        _IDEX_INFO
      {% if "x" in printer.toolhead.homed_axes %}
        _ACTIVATE_MODE MODE={requested_mode}
      {% endif %}
    {% else %}
			RESPOND TYPE=error MSG="Неверный режим! Доступные режимы: Основной(primary), Копирующий(copy), Зеркальный(mirror)."
    {% endif %}
      RESPOND TYPE=command MSG="action:prompt_end"
  {% else %}
      RESPOND TYPE=error MSG="IDEX режимы не доступны."
  {% endif %}

[gcode_macro _IDEX_INFO]
description: Отображение текущего режима
gcode:
	{% if printer.configfile.config.dual_carriage is defined %}
    {% set modes = {
        "primary": "Основной",
        "copy": "Копирующий",
        "mirror": "Зеркальный"
    } %}
    {% for var, name in modes.items() %}
        {% if var == printer["gcode_macro _IDEX_MODE"].mode %}
            RESPOND MSG="Текущий режим: { name }"
        {% endif %}
    {% endfor %}
  {% endif %}

[gcode_macro _ACTIVATE_MODE]
gcode:
  {% if printer.configfile.config.dual_carriage is defined %}
    {% set valid_modes = ['primary', 'copy', 'mirror'] %}
    {% set mode = params.MODE |string %}
    {% if mode in valid_modes  %}
      _PARK CARRIAGE=1
      SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE='extruder1'
      _PARK CARRIAGE=0
      SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
      {% if mode == 'mirror' %}
        SET_DUAL_CARRIAGE CARRIAGE=0 MODE=PRIMARY
        SET_DUAL_CARRIAGE CARRIAGE=1 MODE=MIRROR
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder
      {% elif mode == 'copy' %}
        SET_DUAL_CARRIAGE CARRIAGE=1 MODE=PRIMARY
        SAVE_GCODE_STATE NAME=park1
        G90
        G1 X{(printer.configfile.config.stepper_x.position_max|int / 2) - 100} F{printer.configfile.config.dual_carriage.homing_speed|int*60*3}
        RESTORE_GCODE_STATE NAME=park1
        SET_DUAL_CARRIAGE CARRIAGE=1 MODE=COPY
        SYNC_EXTRUDER_MOTION EXTRUDER=extruder1 MOTION_QUEUE=extruder  
      {% endif %}
      M106 S{printer["gcode_macro M106"].last_speed}
    {% endif %}
  {% endif %}
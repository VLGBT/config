

[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: SET_HEATER_TEMPERATURE1
gcode:
  {% set HEATER = params.HEATER|string %}
  {% set TARGET = params.TARGET|float %}

  # --- Температурные лимиты ---
  {% set heater_limits = {
    "DAS": 450,
    "DAS1": 450,
    "extruder": 500,
    "extruder1": 500,
    "heater_bed": 200,
    "heater_bed0": 200,
    "heater_bed1": 200,
    "heater_bed2": 200,
    "chamber": 250
  } %}

  {% set heater_beds = ["heater_bed0", "heater_bed1", "heater_bed2"] %}
  {% set fan_control = {
    "DAS": "extruder_fan",
    "DAS1": "extruder1_fan"
  } %}

  {% set limit = heater_limits.get(HEATER, 9999) %}
  {% if TARGET > limit %}
      {% if HEATER in heater_beds %}
        {% if printer["heater_generic chamber"].temperature|int > 200 %}
          M140 S{TARGET}
        {% else %}
          RESPOND TYPE=error MSG="Прогрейте термокамеру выше 200°C."
        {% endif %}
      {% else %}
        RESPOND TYPE=error MSG="Невозможно установить выше максимума { limit }°."
      {% endif %}
  {% else %}
    # --- Включение вентилятора при необходимости ---
    {% if HEATER in fan_control %}
      {% set fan = fan_control[HEATER] %}
      {% if printer["fan_generic " ~ fan].speed <= 0 %}
        SET_FAN_SPEED FAN={fan} SPEED=0.5
      {% endif %}
    {% endif %}

    # --- Отключение --- 
    # {% if TARGET <= 0 %}
    #   SET_HEATER_TEMPERATURE1 HEATER={HEATER} TARGET=0
    # {% else %}
    {% if HEATER in heater_beds %}
      M140 S{TARGET}
    {% else %}
      SET_HEATER_TEMPERATURE1 HEATER={HEATER} TARGET={TARGET}
    {% endif %}
    # {% endif %}
  {% endif %}

[gcode_macro M140]
gcode:
  {% set target = params.S|default(0)|float %}
  {% set beds = ["heater_bed0", "heater_bed1", "heater_bed2"] %}

  {% for bed in beds %}
    {% if printer.configfile.config["heater_generic " ~ bed] is defined %}
      SET_HEATER_TEMPERATURE1 HEATER={bed} TARGET={target}
    {% endif %}
  {% endfor %}
[gcode_macro M190]
gcode:
  {% set minimum = params.S|default(0)|float %}
  M140 S{minimum}
  {% set beds = ["heater_bed0", "heater_bed1", "heater_bed2"] %}
  {% for bed in beds %}
    {% if printer.configfile.config["heater_generic " ~ bed] is defined %}
      TEMPERATURE_WAIT SENSOR="heater_generic {bed}" MINIMUM={minimum}
    {% endif %}
  {% endfor %}

[gcode_macro M109]
rename_existing: M109.1
gcode:
  {% set extruder = "extruder" ~ params.T|replace('0', '')
     if "T" in params else printer.toolhead.extruder %}
  SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={params.S|default(0)|float}
  TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={params.S|default(0)|float}
[gcode_macro M104]
rename_existing: M104.1
gcode:
  {% set extruder = "extruder" ~ params.T|replace('0', '')
     if "T" in params else printer.toolhead.extruder %}
  SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={params.S|default(0)|float}
	
[gcode_macro M141]
gcode:
  SET_HEATER_TEMPERATURE HEATER=chamber TARGET={params.S|default(0)|float}
[gcode_macro M191]
gcode:
	M141 S{params.S|default(0)|float}
  TEMPERATURE_WAIT SENSOR='heater_generic chamber' MINIMUM={params.S|default(0)|float}

[gcode_macro SET_PRESSURE_ADVANCE]
rename_existing:SET_PRESSURE_ADVANCE1
variable_current_advance: 0
variable_current_smooth_time:0.04
gcode:
  {% set current_extruder = printer.toolhead.extruder %}

  {% set new_advance = params.ADVANCE|default(printer["gcode_macro SET_PRESSURE_ADVANCE"].current_advance) %}
  {% set new_smooth_time = params.SMOOTH_TIME|default(printer["gcode_macro SET_PRESSURE_ADVANCE"].current_smooth_time) %}
  # {% set current_advance_time = printer.configfile.config.extruder. %}
  # {% if EXTRUDER in params %}
  #   {% if ADVANCE in params %}

  SET_GCODE_VARIABLE MACRO=SET_PRESSURE_ADVANCE VARIABLE=current_advance VALUE={new_advance}
  SET_GCODE_VARIABLE MACRO=SET_PRESSURE_ADVANCE VARIABLE=current_smooth_time VALUE={new_smooth_time}
  SET_PRESSURE_ADVANCE1 EXTRUDER={params.EXTRUDER|default(current_extruder)} ADVANCE={new_advance} SMOOTH_TIME={new_smooth_time}
  
[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}
	
[gcode_macro PID_CALIBRATE]
rename_existing:PID_CALIBRATE_BASE
gcode:
  {% set heater = params.HEATER|string %}
  {% set target = params.TARGET|float %}
  {% if heater == "extruder" %}
    T0
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "extruder1" %}  
    T1
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "DAS" %}
    # T0
    SET_HEATER_TEMPERATURE HEATER=DAS TARGET={target}
    PID_CALIBRATE_BASE HEATER=DAS TARGET={target}
  {% elif heater == "DAS1" %}
    # T1
    SET_HEATER_TEMPERATURE HEATER=DAS1 TARGET={target}
    PID_CALIBRATE_BASE HEATER=DAS1 TARGET={target}
  {% elif heater == "heater_bed" %}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "heater_bed0" %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed1 TARGET={target}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "heater_bed1" %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed0 TARGET={target}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "heater_bed2" %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed0 TARGET={target}
    SET_HEATER_TEMPERATURE HEATER=heater_bed1 TARGET={target}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "chamber" %}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% endif %}
    TURN_OFF_HEATERS
    RESPOND MSG="Калибровка PID {heater} на температуру {target}°C завершена !"
    G4 P5000
    M107
    SAVE_CONFIG

[gcode_macro SET_FAN_SPEED]
rename_existing: SET_FAN_SPEED1
variable_speed_extruder_fan: 0
variable_speed_extruder1_fan: 0
gcode:
  {% set requested_fan = params.FAN|string %}
  {% set speed = params.SPEED|float %}

  {% set fan_heater_map = {
    "extruder_fan": "DAS",
    "extruder1_fan": "DAS1"
  } %}

  {% set fan_list = [] %}

  {% if printer.configfile.config.dual_carriage is defined and
        printer["dual_carriage"].carriage_1 in ["MIRROR", "COPY"] %}
    {% set fan_list = fan_heater_map.keys()|list %}
  {% else %}
    {% set fan_list = [requested_fan] %}
  {% endif %}

  {% for fan_key in fan_list %}
    {% set heater = fan_heater_map.get(fan_key) %}
    {% if printer.configfile.config["fan_generic " ~ fan_key] is defined %}
      SET_FAN_SPEED1 FAN={fan_key} SPEED={speed}
      SET_GCODE_VARIABLE MACRO=SET_FAN_SPEED VARIABLE=speed_{fan_key} VALUE={speed|round(2)}
    {% endif %}

    {% if speed <= 0 and heater is not none %}
      {% if printer.configfile.config["heater_generic " ~ heater] is defined %}
        SET_HEATER_TEMPERATURE1 HEATER={heater} TARGET=0
      {% endif %}
    {% endif %}
  {% endfor %}

	
[gcode_macro M106]
# rename_existing: M106.1 
gcode:

  {% set speed = params.S |default(0)|int / 255|float %} #перевод диапазона значений от 0..255 в 0..1 
  {% if params.P is defined %}
	  SET_FAN_SPEED FAN={'extruder_fan' if  params.P == '0' else 'extruder1_fan'} SPEED={speed}
  {% else %}
    SET_FAN_SPEED FAN={printer.toolhead.extruder}_fan SPEED={speed}
  {% endif %}


[gcode_macro M107]
gcode:
  M106 S0
	
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
  {% set other_extruder = printer.toolhead.extruder %}
  T0
	_CALIBRATE_Z_HEIGHT
	BED_MESH_CALIBRATE_BASE PROFILE={printer['heater_generic heater_bed0'].target|string ~ "°C" if printer['heater_generic heater_bed0'].target|int > 0 else "Текущий" } #ADAPTIVE=1
  _PARK CARRIAGE=0
  T{ "0" if other_extruder == "extruder" else "1" }
  # RESPOND  MSG="Калибровка сетки стола завершена"
[gcode_macro SET_HEATER_TEMPERATURE]
rename_existing: SET_HEATER_TEMPERATURE1
gcode:
  {% set HEATER = params.HEATER|string %}
  {% set TARGET = params.TARGET|float %}

  # --- Температурные лимиты ---
  {% set heater_limits = {
    "DAS": 400,
    "DAS1": 400,
    "extruder": 500,
    "extruder1": 500,
    "heater_bed": 200,
    "heater_bed0": 200,
    "heater_bed1": 200,
    "heater_bed2": 200,
    "chamber": 250
  } %}

  {% set heater_beds = ["heater_bed0", "heater_bed1", "heater_bed2"] %}
  {% set fan_control = {
    "DAS": "extruder_fan",
    "DAS1": "extruder1_fan"
  } %}

  {% set limit = heater_limits.get(HEATER, 9999) %}
  {% if TARGET > limit %}
      {% if HEATER in heater_beds %}
        {% if printer["heater_generic chamber"].temperature|int > 200 %}
          M140 S{TARGET}
        {% else %}
          RESPOND TYPE=error MSG="Прогрейте термокамеру выше 200°C."
        {% endif %}
      {% else %}
        RESPOND TYPE=error MSG="Невозможно установить выше максимума { limit }°."
      {% endif %}
  {% else %}
    # --- Включение вентилятора при необходимости ---
    {% if HEATER in fan_control %}
      {% set fan = fan_control[HEATER] %}
      {% if printer["fan_generic " ~ fan].speed <= 0 %}
        SET_FAN_SPEED FAN={fan} SPEED=0.5
      {% endif %}
    {% endif %}

    # --- Отключение --- 
    # {% if TARGET <= 0 %}
    #   SET_HEATER_TEMPERATURE1 HEATER={HEATER} TARGET=0
    # {% else %}
    {% if HEATER in heater_beds %}
      M140 S{TARGET}
    {% else %}
      SET_HEATER_TEMPERATURE1 HEATER={HEATER} TARGET={TARGET}
    {% endif %}
    # {% endif %}
  {% endif %}

[gcode_macro M140]
gcode:
  {% set target = params.S|default(0)|float %}
  {% set beds = ["heater_bed0", "heater_bed1", "heater_bed2"] %}

  {% for bed in beds %}
    {% if printer.configfile.config["heater_generic " ~ bed] is defined %}
      SET_HEATER_TEMPERATURE1 HEATER={bed} TARGET={target}
    {% endif %}
  {% endfor %}
[gcode_macro M190]
gcode:
  {% set minimum = params.S|default(0)|float %}
  M140 S{minimum}
  {% set beds = ["heater_bed0", "heater_bed1", "heater_bed2"] %}
  {% for bed in beds %}
    {% if printer.configfile.config["heater_generic " ~ bed] is defined %}
      TEMPERATURE_WAIT SENSOR="heater_generic {bed}" MINIMUM={minimum}
    {% endif %}
  {% endfor %}

[gcode_macro M109]
rename_existing: M109.1
gcode:
  {% set extruder = "extruder" ~ params.T|replace('0', '')
     if "T" in params else printer.toolhead.extruder %}
  SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={params.S|default(0)|float}
  TEMPERATURE_WAIT SENSOR={extruder} MINIMUM={params.S|default(0)|float}
[gcode_macro M104]
rename_existing: M104.1
gcode:
  {% set extruder = "extruder" ~ params.T|replace('0', '')
     if "T" in params else printer.toolhead.extruder %}
  SET_HEATER_TEMPERATURE HEATER={extruder} TARGET={params.S|default(0)|float}
	
[gcode_macro M141]
gcode:
  SET_HEATER_TEMPERATURE HEATER=chamber TARGET={params.S|default(0)|float}
[gcode_macro M191]
gcode:
	M141 S{params.S|default(0)|float}
  TEMPERATURE_WAIT SENSOR='heater_generic chamber' MINIMUM={params.S|default(0)|float}
	
[gcode_macro M900]
gcode:
  {% if 'K' in params %}
    {% if 'E' in params %}
      SET_PRESSURE_ADVANCE EXTRUDER={params.E} ADVANCE={params.K}
    {% else %}
      SET_PRESSURE_ADVANCE ADVANCE={params.K}
    {% endif %}
  {% endif %}
	
[gcode_macro PID_CALIBRATE]
rename_existing:PID_CALIBRATE_BASE
gcode:
  {% set heater = params.HEATER|string %}
  {% set target = params.TARGET|float %}
  {% if heater == "extruder" %}
    T0
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "extruder1" %}  
    T1
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "DAS" %}
    T0
    SET_HEATER_TEMPERATURE HEATER=DAS TARGET={target}
    PID_CALIBRATE_BASE HEATER=DAS TARGET={target}
  {% elif heater == "DAS1" %}
    T1
    SET_HEATER_TEMPERATURE HEATER=DAS1 TARGET={target}
    PID_CALIBRATE_BASE HEATER=DAS1 TARGET={target}
  {% elif heater == "heater_bed" %}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "heater_bed0" %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed1 TARGET={target}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "heater_bed1" %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed0 TARGET={target}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "heater_bed2" %}
    SET_HEATER_TEMPERATURE HEATER=heater_bed0 TARGET={target}
    SET_HEATER_TEMPERATURE HEATER=heater_bed1 TARGET={target}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% elif heater == "chamber" %}
    PID_CALIBRATE_BASE HEATER={heater} TARGET={target}
  {% endif %}
    TURN_OFF_HEATERS
    RESPOND MSG="Калибровка PID {heater} на температуру {target}°C завершена !"
    G4 P5000
    M107
    SAVE_CONFIG

[gcode_macro SET_FAN_SPEED]
rename_existing: SET_FAN_SPEED1
gcode:
  {% set fan = params.FAN|string %}
  {% set speed = params.SPEED|float %}

  # Сопоставление вентиляторов и соответствующих нагревателей
  {% set fan_heater_map = {
    "extruder_fan": "DAS",
    "extruder1_fan": "DAS1"
  } %}

  # Если скорость 0, выключаем нагреватель (если он есть и определён)
  {% if speed <= 0 and fan in fan_heater_map %}
    {% set heater = fan_heater_map[fan] %}
    {% if printer.configfile.config["heater_generic " ~ heater] is defined %}
      SET_HEATER_TEMPERATURE1 HEATER={heater} TARGET=0
    {% endif %}
  {% endif %}
  {% if printer.configfile.config.dual_carriage is defined %}
		{% if printer["dual_carriage"].carriage_1 == "MIRROR" or printer["dual_carriage"].carriage_1 == "COPY"  %} 
			{% for fan in fan_heater_map %}
				{% if printer.configfile.config["fan_generic " ~ fan] is defined %}
					SET_FAN_SPEED1 FAN={fan} SPEED={speed}
				{% endif %}
			{% endfor %}
		{% else %}
			SET_FAN_SPEED1 FAN={fan} SPEED={speed}
		{% endif %}
	{% endif %}
	
[gcode_macro M106]
# rename_existing: M106.1
variable_last_speed: 0 # переменная хранящая последнюю заданную скорость, используется в IDEX 
gcode:
  {% set s = params.S|default(255)|int %}
  SET_GCODE_VARIABLE MACRO=M106 VARIABLE=last_speed VALUE={s}
  {% set speed = s / 255|float %} #перевод диапазона значений от 0..255 в 0..1
	SET_FAN_SPEED FAN={printer.toolhead.extruder}_fan SPEED={speed}
[gcode_macro M107]
gcode:
  M106 S0
	
[gcode_macro T0]
gcode:
  _TOOL_SWITCH TOOL=0

[gcode_macro T1]
gcode:
  _TOOL_SWITCH TOOL=1

[gcode_macro _TOOL_SWITCH]
description: Универсальный макрос переключения кареток для T0 и T1
variable_tool: 0

gcode:
  {% if printer.configfile.config.dual_carriage is defined %}
    {% set tool = params.TOOL|default(tool)|int %}
    {% set inactive_tool = '1' if tool == 0 else '0' %}
    {% set active_extruder = 'extruder' if tool == 0 else 'extruder1' %}
    {% set inactive_extruder = 'extruder1' if tool == 0 else 'extruder' %}
    {% set other_carriage = 1 if tool == 0 else 0 %}
    {% set current_state = printer.dual_carriage["carriage_" ~ other_carriage] %}
    {% set should_park = current_state in ["PRIMARY", "INACTIVE"] if tool == 0 else current_state == "PRIMARY" %}

    {% if should_park %}
      _PARK CARRIAGE={inactive_tool}
    {% endif %}

    SET_DUAL_CARRIAGE CARRIAGE={tool}
    SET_STEPPER_ENABLE STEPPER={active_extruder} ENABLE=1
    SET_STEPPER_ENABLE STEPPER={inactive_extruder} ENABLE=0
    ACTIVATE_EXTRUDER EXTRUDER={active_extruder}
    M106 S{printer["gcode_macro M106"].last_speed}
    _APPLY_OFFSETS
  {% endif %}
	
[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
  {% if "xyz" not in printer.toolhead.homed_axes %}
    G28
  {% endif %}
  {% set other_extruder = printer.toolhead.extruder %}
  T0
	_CALIBRATE_Z_HEIGHT
	BED_MESH_CALIBRATE_BASE PROFILE={printer['heater_generic heater_bed0'].target|string ~ "°C" if printer['heater_generic heater_bed0'].target|int > 0 else "Текущий" } #ADAPTIVE=1
  _PARK CARRIAGE=0
  T{ "0" if other_extruder == "extruder" else "1" }
  # RESPOND  MSG="Калибровка сетки стола завершена"